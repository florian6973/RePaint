Start test_inet64_genhalf
device: cuda
cond_y: 933
loading model...
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Loading model from: /workspace/.miniconda3/lib/python3.11/site-packages/lpips/weights/v0.1/alex.pth
Betas step 1000
[0, 20, 41, 61, 82, 102, 122, 143, 163, 183, 204, 224, 245, 265, 285, 306, 326, 347, 367, 387, 408, 428, 449, 469, 489, 510, 530, 550, 571, 591, 612, 632, 652, 673, 693, 714, 734, 754, 775, 795, 816, 836, 856, 877, 897, 917, 938, 958, 979, 999]
50
Timestep number: 1000
Timestep number: 50
loading state
loading classifier...
{'image_size': 64, 'classifier_use_fp16': True, 'classifier_width': 128, 'classifier_depth': 4, 'classifier_attention_resolutions': '32,16,8', 'classifier_use_scale_shift_norm': True, 'classifier_resblock_updown': True, 'classifier_pool': 'attention'}
./data/pretrained/64x64_classifier.pt
sampling...
eval_name: lama_inet64_genhalf_n100_test
loading dataloader...
tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([47], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]]]],
       device='cuda:0')
Extracting beta: tensor([48], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]]]],
       device='cuda:0')
Extracting beta: tensor([45], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]]]],
       device='cuda:0')
Extracting beta: tensor([46], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]]]],
       device='cuda:0')
Extracting beta: tensor([43], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]]]],
       device='cuda:0')
Extracting beta: tensor([44], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]]]],
       device='cuda:0')
Extracting beta: tensor([41], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]]]],
       device='cuda:0')
Extracting beta: tensor([42], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]]]],
       device='cuda:0')
Extracting beta: tensor([39], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]]]],
       device='cuda:0')
Extracting beta: tensor([40], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]]]],
       device='cuda:0')
Extracting beta: tensor([37], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]]]],
       device='cuda:0')
Extracting beta: tensor([38], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]]]],
       device='cuda:0')
Extracting beta: tensor([35], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]]]],
       device='cuda:0')
Extracting beta: tensor([36], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]]]],
       device='cuda:0')
Extracting beta: tensor([33], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]]]],
       device='cuda:0')
Extracting beta: tensor([34], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]]]],
       device='cuda:0')
Extracting beta: tensor([31], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]]]],
       device='cuda:0')
Extracting beta: tensor([32], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]]]],
       device='cuda:0')
Extracting beta: tensor([29], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]]]],
       device='cuda:0')
Extracting beta: tensor([30], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]]]],
       device='cuda:0')
Extracting beta: tensor([27], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]]]],
       device='cuda:0')
Extracting beta: tensor([28], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]]]],
       device='cuda:0')
Extracting beta: tensor([25], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]]]],
       device='cuda:0')
Extracting beta: tensor([26], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]]]],
       device='cuda:0')
Extracting beta: tensor([23], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]]]],
       device='cuda:0')
Extracting beta: tensor([24], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]]]],
       device='cuda:0')
Extracting beta: tensor([21], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]]]],
       device='cuda:0')
Extracting beta: tensor([22], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([47], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]]]],
       device='cuda:0')
Extracting beta: tensor([48], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]]]],
       device='cuda:0')
Extracting beta: tensor([45], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]]]],
       device='cuda:0')
Extracting beta: tensor([46], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]]]],
       device='cuda:0')
Extracting beta: tensor([43], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]]]],
       device='cuda:0')
Extracting beta: tensor([44], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]]]],
       device='cuda:0')
Extracting beta: tensor([41], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]]]],
       device='cuda:0')
Extracting beta: tensor([42], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]]]],
       device='cuda:0')
Extracting beta: tensor([39], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]]]],
       device='cuda:0')
Extracting beta: tensor([40], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]]]],
       device='cuda:0')
Extracting beta: tensor([37], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]]]],
       device='cuda:0')
Extracting beta: tensor([38], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]]]],
       device='cuda:0')
Extracting beta: tensor([35], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]]]],
       device='cuda:0')
Extracting beta: tensor([36], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]]]],
       device='cuda:0')
Extracting beta: tensor([33], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]]]],
       device='cuda:0')
Extracting beta: tensor([34], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]]]],
       device='cuda:0')
Extracting beta: tensor([31], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]]]],
       device='cuda:0')
Extracting beta: tensor([32], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]]]],
       device='cuda:0')
Extracting beta: tensor([29], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]]]],
       device='cuda:0')
Extracting beta: tensor([30], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]]]],
       device='cuda:0')
Extracting beta: tensor([27], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]]]],
       device='cuda:0')
Extracting beta: tensor([28], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]]]],
       device='cuda:0')
Extracting beta: tensor([25], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]]]],
       device='cuda:0')
Extracting beta: tensor([26], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]]]],
       device='cuda:0')
Extracting beta: tensor([23], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]]]],
       device='cuda:0')
Extracting beta: tensor([24], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]]]],
       device='cuda:0')
Extracting beta: tensor([21], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]]]],
       device='cuda:0')
Extracting beta: tensor([22], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([47], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]]]],
       device='cuda:0')
Extracting beta: tensor([48], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]]]],
       device='cuda:0')
Extracting beta: tensor([45], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]]]],
       device='cuda:0')
Extracting beta: tensor([46], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]]]],
       device='cuda:0')
Extracting beta: tensor([43], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]]]],
       device='cuda:0')
Extracting beta: tensor([44], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]]]],
       device='cuda:0')
Extracting beta: tensor([41], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]]]],
       device='cuda:0')
Extracting beta: tensor([42], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]]]],
       device='cuda:0')
Extracting beta: tensor([39], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]]]],
       device='cuda:0')
Extracting beta: tensor([40], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]]]],
       device='cuda:0')
Extracting beta: tensor([37], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]]]],
       device='cuda:0')
Extracting beta: tensor([38], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]]]],
       device='cuda:0')
Extracting beta: tensor([35], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]]]],
       device='cuda:0')
Extracting beta: tensor([36], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]]]],
       device='cuda:0')
Extracting beta: tensor([33], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]]]],
       device='cuda:0')
Extracting beta: tensor([34], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]]]],
       device='cuda:0')
Extracting beta: tensor([31], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]]]],
       device='cuda:0')
Extracting beta: tensor([32], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]]]],
       device='cuda:0')
Extracting beta: tensor([29], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]]]],
       device='cuda:0')
Extracting beta: tensor([30], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]]]],
       device='cuda:0')
Extracting beta: tensor([27], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]]]],
       device='cuda:0')
Extracting beta: tensor([28], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]]]],
       device='cuda:0')
Extracting beta: tensor([25], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]]]],
       device='cuda:0')
Extracting beta: tensor([26], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]]]],
       device='cuda:0')
Extracting beta: tensor([23], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]]]],
       device='cuda:0')
Extracting beta: tensor([24], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]]]],
       device='cuda:0')
Extracting beta: tensor([21], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]]]],
       device='cuda:0')
Extracting beta: tensor([22], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([47], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]]]],
       device='cuda:0')
Extracting beta: tensor([48], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]]]],
       device='cuda:0')
Extracting beta: tensor([45], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]]]],
       device='cuda:0')
Extracting beta: tensor([46], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]]]],
       device='cuda:0')
Extracting beta: tensor([43], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]]]],
       device='cuda:0')
Extracting beta: tensor([44], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]]]],
       device='cuda:0')
Extracting beta: tensor([41], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]]]],
       device='cuda:0')
Extracting beta: tensor([42], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]]]],
       device='cuda:0')
Extracting beta: tensor([39], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]]]],
       device='cuda:0')
Extracting beta: tensor([40], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]]]],
       device='cuda:0')
Extracting beta: tensor([37], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]]]],
       device='cuda:0')
Extracting beta: tensor([38], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]]]],
       device='cuda:0')
Extracting beta: tensor([35], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]]]],
       device='cuda:0')
Extracting beta: tensor([36], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]]]],
       device='cuda:0')
Extracting beta: tensor([33], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]]]],
       device='cuda:0')
Extracting beta: tensor([34], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]]]],
       device='cuda:0')
Extracting beta: tensor([31], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]]]],
       device='cuda:0')
Extracting beta: tensor([32], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]]]],
       device='cuda:0')
Extracting beta: tensor([29], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]]]],
       device='cuda:0')
Extracting beta: tensor([30], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]]]],
       device='cuda:0')
Extracting beta: tensor([27], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]]]],
       device='cuda:0')
Extracting beta: tensor([28], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]]]],
       device='cuda:0')
Extracting beta: tensor([25], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]]]],
       device='cuda:0')
Extracting beta: tensor([26], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]]]],
       device='cuda:0')
Extracting beta: tensor([23], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]]]],
       device='cuda:0')
Extracting beta: tensor([24], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]]]],
       device='cuda:0')
Extracting beta: tensor([21], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]]]],
       device='cuda:0')
Extracting beta: tensor([22], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([47], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]],

         [[0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          ...,
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475],
          [0.5475, 0.5475, 0.5475,  ..., 0.5475, 0.5475, 0.5475]]]],
       device='cuda:0')
Extracting beta: tensor([48], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]],

         [[0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          ...,
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618],
          [0.7618, 0.7618, 0.7618,  ..., 0.7618, 0.7618, 0.7618]]]],
       device='cuda:0')
Extracting beta: tensor([45], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]],

         [[0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          ...,
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518],
          [0.3518, 0.3518, 0.3518,  ..., 0.3518, 0.3518, 0.3518]]]],
       device='cuda:0')
Extracting beta: tensor([46], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]],

         [[0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          ...,
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453],
          [0.4453, 0.4453, 0.4453,  ..., 0.4453, 0.4453, 0.4453]]]],
       device='cuda:0')
Extracting beta: tensor([43], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]],

         [[0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          ...,
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688],
          [0.2688, 0.2688, 0.2688,  ..., 0.2688, 0.2688, 0.2688]]]],
       device='cuda:0')
Extracting beta: tensor([44], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]],

         [[0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          ...,
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984],
          [0.2984, 0.2984, 0.2984,  ..., 0.2984, 0.2984, 0.2984]]]],
       device='cuda:0')
Extracting beta: tensor([41], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]],

         [[0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          ...,
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022],
          [0.2022, 0.2022, 0.2022,  ..., 0.2022, 0.2022, 0.2022]]]],
       device='cuda:0')
Extracting beta: tensor([42], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]],

         [[0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          ...,
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265],
          [0.2265, 0.2265, 0.2265,  ..., 0.2265, 0.2265, 0.2265]]]],
       device='cuda:0')
Extracting beta: tensor([39], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]],

         [[0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          ...,
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648],
          [0.1648, 0.1648, 0.1648,  ..., 0.1648, 0.1648, 0.1648]]]],
       device='cuda:0')
Extracting beta: tensor([40], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]],

         [[0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          ...,
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899],
          [0.1899, 0.1899, 0.1899,  ..., 0.1899, 0.1899, 0.1899]]]],
       device='cuda:0')
Extracting beta: tensor([37], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]],

         [[0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          ...,
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381],
          [0.1381, 0.1381, 0.1381,  ..., 0.1381, 0.1381, 0.1381]]]],
       device='cuda:0')
Extracting beta: tensor([38], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]],

         [[0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          ...,
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573],
          [0.1573, 0.1573, 0.1573,  ..., 0.1573, 0.1573, 0.1573]]]],
       device='cuda:0')
Extracting beta: tensor([35], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]],

         [[0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          ...,
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237],
          [0.1237, 0.1237, 0.1237,  ..., 0.1237, 0.1237, 0.1237]]]],
       device='cuda:0')
Extracting beta: tensor([36], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]],

         [[0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          ...,
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276],
          [0.1276, 0.1276, 0.1276,  ..., 0.1276, 0.1276, 0.1276]]]],
       device='cuda:0')
Extracting beta: tensor([33], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]],

         [[0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          ...,
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070],
          [0.1070, 0.1070, 0.1070,  ..., 0.1070, 0.1070, 0.1070]]]],
       device='cuda:0')
Extracting beta: tensor([34], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]],

         [[0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          ...,
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097],
          [0.1097, 0.1097, 0.1097,  ..., 0.1097, 0.1097, 0.1097]]]],
       device='cuda:0')
Extracting beta: tensor([31], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]],

         [[0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          ...,
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894],
          [0.0894, 0.0894, 0.0894,  ..., 0.0894, 0.0894, 0.0894]]]],
       device='cuda:0')
Extracting beta: tensor([32], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]],

         [[0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          ...,
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954],
          [0.0954, 0.0954, 0.0954,  ..., 0.0954, 0.0954, 0.0954]]]],
       device='cuda:0')
Extracting beta: tensor([29], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]],

         [[0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          ...,
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785],
          [0.0785, 0.0785, 0.0785,  ..., 0.0785, 0.0785, 0.0785]]]],
       device='cuda:0')
Extracting beta: tensor([30], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]],

         [[0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          ...,
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877],
          [0.0877, 0.0877, 0.0877,  ..., 0.0877, 0.0877, 0.0877]]]],
       device='cuda:0')
Extracting beta: tensor([27], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]],

         [[0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          ...,
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693],
          [0.0693, 0.0693, 0.0693,  ..., 0.0693, 0.0693, 0.0693]]]],
       device='cuda:0')
Extracting beta: tensor([28], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]],

         [[0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          ...,
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773],
          [0.0773, 0.0773, 0.0773,  ..., 0.0773, 0.0773, 0.0773]]]],
       device='cuda:0')
Extracting beta: tensor([25], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]],

         [[0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          ...,
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642],
          [0.0642, 0.0642, 0.0642,  ..., 0.0642, 0.0642, 0.0642]]]],
       device='cuda:0')
Extracting beta: tensor([26], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]],

         [[0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          ...,
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652],
          [0.0652, 0.0652, 0.0652,  ..., 0.0652, 0.0652, 0.0652]]]],
       device='cuda:0')
Extracting beta: tensor([23], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]],

         [[0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          ...,
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542],
          [0.0542, 0.0542, 0.0542,  ..., 0.0542, 0.0542, 0.0542]]]],
       device='cuda:0')
Extracting beta: tensor([24], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]],

         [[0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          ...,
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576],
          [0.0576, 0.0576, 0.0576,  ..., 0.0576, 0.0576, 0.0576]]]],
       device='cuda:0')
Extracting beta: tensor([21], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]],

         [[0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          ...,
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477],
          [0.0477, 0.0477, 0.0477,  ..., 0.0477, 0.0477, 0.0477]]]],
       device='cuda:0')
Extracting beta: tensor([22], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]],

         [[0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          ...,
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534],
          [0.0534, 0.0534, 0.0534,  ..., 0.0534, 0.0534, 0.0534]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]],

         [[0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          ...,
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419],
          [0.0419, 0.0419, 0.0419,  ..., 0.0419, 0.0419, 0.0419]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]],

         [[0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          ...,
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469],
          [0.0469, 0.0469, 0.0469,  ..., 0.0469, 0.0469, 0.0469]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]],

         [[0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          ...,
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383],
          [0.0383, 0.0383, 0.0383,  ..., 0.0383, 0.0383, 0.0383]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]],

         [[0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          ...,
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392],
          [0.0392, 0.0392, 0.0392,  ..., 0.0392, 0.0392, 0.0392]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]],

         [[0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          ...,
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331],
          [0.0331, 0.0331, 0.0331,  ..., 0.0331, 0.0331, 0.0331]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]],

         [[0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          ...,
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340],
          [0.0340, 0.0340, 0.0340,  ..., 0.0340, 0.0340, 0.0340]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]],

         [[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          ...,
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268],
          [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0268, 0.0268]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]],

         [[0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          ...,
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291],
          [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0291, 0.0291]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]],

         [[0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          ...,
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258],
          [0.0258, 0.0258, 0.0258,  ..., 0.0258, 0.0258, 0.0258]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]],

         [[0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          ...,
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180],
          [0.0180, 0.0180, 0.0180,  ..., 0.0180, 0.0180, 0.0180]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]],

         [[0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          ...,
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211],
          [0.0211, 0.0211, 0.0211,  ..., 0.0211, 0.0211, 0.0211]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]],

         [[0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          ...,
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146],
          [0.0146, 0.0146, 0.0146,  ..., 0.0146, 0.0146, 0.0146]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]],

         [[0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          ...,
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160],
          [0.0160, 0.0160, 0.0160,  ..., 0.0160, 0.0160, 0.0160]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]],

         [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          ...,
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
          [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]],

         [[0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          ...,
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
          [0.0118, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0118]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]],

         [[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          ...,
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
          [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]],

         [[0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          ...,
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082],
          [0.0082, 0.0082, 0.0082,  ..., 0.0082, 0.0082, 0.0082]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]],

         [[0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          ...,
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018],
          [0.0018, 0.0018, 0.0018,  ..., 0.0018, 0.0018, 0.0018]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]],

         [[0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          ...,
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040],
          [0.0040, 0.0040, 0.0040,  ..., 0.0040, 0.0040, 0.0040]]]],
       device='cuda:0')

LPIPS for 000000.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000001.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000002.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000003.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000004.png
SSIM for (64, 64, 3) (64, 64, 3)
sampling complete
