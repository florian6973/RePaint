Start test_inet64_genhalf
device: cuda
cond_y: 933
loading model...
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Loading model from: /workspace/.miniconda3/lib/python3.11/site-packages/lpips/weights/v0.1/alex.pth
[0, 111, 222, 333, 444, 555, 666, 777, 888, 999]
10
loading state
loading classifier...
{'image_size': 64, 'classifier_use_fp16': True, 'classifier_width': 128, 'classifier_depth': 4, 'classifier_attention_resolutions': '32,16,8', 'classifier_use_scale_shift_norm': True, 'classifier_resblock_updown': True, 'classifier_pool': 'attention'}
./data/pretrained/64x64_classifier.pt
sampling...
eval_name: lama_inet64_genhalf_n100_test
loading dataloader...
tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]]]]) tensor([7], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]]]]) tensor([8], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]]]]) tensor([5], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]]]]) tensor([6], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]]]]) tensor([3], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]]]]) tensor([4], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]]]]) tensor([1], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]]]]) tensor([2], device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]]]]) tensor([7], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]]]]) tensor([8], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]]]]) tensor([5], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]]]]) tensor([6], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]]]]) tensor([3], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]]]]) tensor([4], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]]]]) tensor([1], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]]]]) tensor([2], device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]]]]) tensor([7], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]]]]) tensor([8], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]]]]) tensor([5], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]]]]) tensor([6], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]]]]) tensor([3], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]]]]) tensor([4], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]]]]) tensor([1], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]]]]) tensor([2], device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]]]]) tensor([7], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]]]]) tensor([8], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]]]]) tensor([5], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]]]]) tensor([6], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]]]]) tensor([3], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]]]]) tensor([4], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]]]]) tensor([1], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]]]]) tensor([2], device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]],

         [[0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          ...,
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325],
          [0.5325, 0.5325, 0.5325,  ..., 0.5325, 0.5325, 0.5325]]]]) tensor([7], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]],

         [[0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          ...,
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424],
          [0.7424, 0.7424, 0.7424,  ..., 0.7424, 0.7424, 0.7424]]]]) tensor([8], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]],

         [[0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          ...,
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972],
          [0.2972, 0.2972, 0.2972,  ..., 0.2972, 0.2972, 0.2972]]]]) tensor([5], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]],

         [[0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          ...,
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957],
          [0.3957, 0.3957, 0.3957,  ..., 0.3957, 0.3957, 0.3957]]]]) tensor([6], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]],

         [[0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          ...,
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531],
          [0.1531, 0.1531, 0.1531,  ..., 0.1531, 0.1531, 0.1531]]]]) tensor([3], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]],

         [[0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          ...,
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193],
          [0.2193, 0.2193, 0.2193,  ..., 0.2193, 0.2193, 0.2193]]]]) tensor([4], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]],

         [[0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          ...,
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344],
          [0.0344, 0.0344, 0.0344,  ..., 0.0344, 0.0344, 0.0344]]]]) tensor([1], device='cuda:0')
Extracting beta: torch.Size([1, 3, 64, 64]) tensor([[[[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]],

         [[0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          ...,
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927],
          [0.0927, 0.0927, 0.0927,  ..., 0.0927, 0.0927, 0.0927]]]]) tensor([2], device='cuda:0')

LPIPS for 000000.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000001.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000002.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000003.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000004.png
SSIM for (64, 64, 3) (64, 64, 3)
sampling complete
