Start test_inet64_genhalf
device: cuda
cond_y: 933
loading model...
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Loading model from: /workspace/.miniconda3/lib/python3.11/site-packages/lpips/weights/v0.1/alex.pth
Setting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]
Loading model from: /workspace/.miniconda3/lib/python3.11/site-packages/lpips/weights/v0.1/vgg.pth
Betas step 1000
[0, 42, 83, 125, 166, 208, 250, 291, 333, 375, 416, 458, 500, 541, 583, 624, 666, 708, 749, 791, 832, 874, 916, 957, 999]
25
Timestep number: 1000
Timestep number: 25
loading state
loading classifier...
{'image_size': 64, 'classifier_use_fp16': True, 'classifier_width': 128, 'classifier_depth': 4, 'classifier_attention_resolutions': '32,16,8', 'classifier_use_scale_shift_norm': True, 'classifier_resblock_updown': True, 'classifier_pool': 'attention'}
./data/pretrained/64x64_classifier.pt
sampling...
eval_name: lama_inet64_genhalf_n100_test
loading dataloader...
tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]],

         [[0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          ...,
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918],
          [0.1918, 0.1918, 0.1918,  ..., 0.1918, 0.1918, 0.1918]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]],

         [[0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          ...,
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197],
          [0.2197, 0.2197, 0.2197,  ..., 0.2197, 0.2197, 0.2197]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]],

         [[0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          ...,
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484],
          [0.2484, 0.2484, 0.2484,  ..., 0.2484, 0.2484, 0.2484]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]],

         [[0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          ...,
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968],
          [0.2968, 0.2968, 0.2968,  ..., 0.2968, 0.2968, 0.2968]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]],

         [[0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          ...,
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473],
          [0.3473, 0.3473, 0.3473,  ..., 0.3473, 0.3473, 0.3473]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]],

         [[0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          ...,
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035],
          [0.1035, 0.1035, 0.1035,  ..., 0.1035, 0.1035, 0.1035]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]],

         [[0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          ...,
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172],
          [0.1172, 0.1172, 0.1172,  ..., 0.1172, 0.1172, 0.1172]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]],

         [[0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          ...,
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293],
          [0.1293, 0.1293, 0.1293,  ..., 0.1293, 0.1293, 0.1293]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]],

         [[0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          ...,
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493],
          [0.1493, 0.1493, 0.1493,  ..., 0.1493, 0.1493, 0.1493]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]],

         [[0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          ...,
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652],
          [0.1652, 0.1652, 0.1652,  ..., 0.1652, 0.1652, 0.1652]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]],

         [[0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          ...,
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497],
          [0.0497, 0.0497, 0.0497,  ..., 0.0497, 0.0497, 0.0497]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]],

         [[0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          ...,
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578],
          [0.0578, 0.0578, 0.0578,  ..., 0.0578, 0.0578, 0.0578]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]],

         [[0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          ...,
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691],
          [0.0691, 0.0691, 0.0691,  ..., 0.0691, 0.0691, 0.0691]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]],

         [[0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          ...,
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798],
          [0.0798, 0.0798, 0.0798,  ..., 0.0798, 0.0798, 0.0798]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]],

         [[0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          ...,
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891],
          [0.0891, 0.0891, 0.0891,  ..., 0.0891, 0.0891, 0.0891]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]],

         [[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          ...,
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
          [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]],

         [[0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          ...,
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142],
          [0.0142, 0.0142, 0.0142,  ..., 0.0142, 0.0142, 0.0142]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]],

         [[0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          ...,
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230],
          [0.0230, 0.0230, 0.0230,  ..., 0.0230, 0.0230, 0.0230]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]],

         [[0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          ...,
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309],
          [0.0309, 0.0309, 0.0309,  ..., 0.0309, 0.0309, 0.0309]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 64, 64]) tensor([[[[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]],

         [[0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          ...,
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404],
          [0.0404, 0.0404, 0.0404,  ..., 0.0404, 0.0404, 0.0404]]]],
       device='cuda:0')

LPIPS for 000000.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000001.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000002.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000003.png
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000004.png
SSIM for (64, 64, 3) (64, 64, 3)
sampling complete
