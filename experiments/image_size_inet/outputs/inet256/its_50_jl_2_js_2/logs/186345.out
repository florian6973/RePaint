Start test_inet256_genhalf
device: cuda
cond_y: 933
loading model...
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Loading model from: /workspace/.miniconda3/lib/python3.11/site-packages/lpips/weights/v0.1/alex.pth
Betas step 1000
[0, 20, 41, 61, 82, 102, 122, 143, 163, 183, 204, 224, 245, 265, 285, 306, 326, 347, 367, 387, 408, 428, 449, 469, 489, 510, 530, 550, 571, 591, 612, 632, 652, 673, 693, 714, 734, 754, 775, 795, 816, 836, 856, 877, 897, 917, 938, 958, 979, 999]
50
Timestep number: 1000
Timestep number: 50
loading state
loading classifier...
{'image_size': 256, 'classifier_use_fp16': False, 'classifier_width': 128, 'classifier_depth': 2, 'classifier_attention_resolutions': '32,16,8', 'classifier_use_scale_shift_norm': True, 'classifier_resblock_updown': True, 'classifier_pool': 'attention'}
./data/pretrained/256x256_classifier.pt
sampling...
eval_name: lama_inet256_genhalf_n100_test
loading dataloader...
tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([47], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          ...,
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186]],

         [[0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          ...,
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186]],

         [[0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          ...,
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186],
          [0.3186, 0.3186, 0.3186,  ..., 0.3186, 0.3186, 0.3186]]]],
       device='cuda:0')
Extracting beta: tensor([48], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          ...,
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373]],

         [[0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          ...,
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373]],

         [[0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          ...,
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373],
          [0.3373, 0.3373, 0.3373,  ..., 0.3373, 0.3373, 0.3373]]]],
       device='cuda:0')
Extracting beta: tensor([45], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          ...,
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071]],

         [[0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          ...,
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071]],

         [[0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          ...,
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071],
          [0.3071, 0.3071, 0.3071,  ..., 0.3071, 0.3071, 0.3071]]]],
       device='cuda:0')
Extracting beta: tensor([46], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          ...,
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256]],

         [[0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          ...,
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256]],

         [[0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          ...,
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256],
          [0.3256, 0.3256, 0.3256,  ..., 0.3256, 0.3256, 0.3256]]]],
       device='cuda:0')
Extracting beta: tensor([43], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          ...,
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079]],

         [[0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          ...,
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079]],

         [[0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          ...,
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079],
          [0.3079, 0.3079, 0.3079,  ..., 0.3079, 0.3079, 0.3079]]]],
       device='cuda:0')
Extracting beta: tensor([44], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          ...,
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015]],

         [[0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          ...,
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015]],

         [[0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          ...,
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015],
          [0.3015, 0.3015, 0.3015,  ..., 0.3015, 0.3015, 0.3015]]]],
       device='cuda:0')
Extracting beta: tensor([41], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          ...,
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840]],

         [[0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          ...,
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840]],

         [[0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          ...,
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840],
          [0.2840, 0.2840, 0.2840,  ..., 0.2840, 0.2840, 0.2840]]]],
       device='cuda:0')
Extracting beta: tensor([42], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          ...,
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898]],

         [[0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          ...,
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898]],

         [[0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          ...,
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898],
          [0.2898, 0.2898, 0.2898,  ..., 0.2898, 0.2898, 0.2898]]]],
       device='cuda:0')
Extracting beta: tensor([39], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          ...,
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720]],

         [[0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          ...,
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720]],

         [[0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          ...,
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720],
          [0.2720, 0.2720, 0.2720,  ..., 0.2720, 0.2720, 0.2720]]]],
       device='cuda:0')
Extracting beta: tensor([40], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          ...,
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897]],

         [[0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          ...,
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897]],

         [[0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          ...,
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897],
          [0.2897, 0.2897, 0.2897,  ..., 0.2897, 0.2897, 0.2897]]]],
       device='cuda:0')
Extracting beta: tensor([37], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          ...,
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598]],

         [[0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          ...,
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598]],

         [[0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          ...,
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598],
          [0.2598, 0.2598, 0.2598,  ..., 0.2598, 0.2598, 0.2598]]]],
       device='cuda:0')
Extracting beta: tensor([38], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          ...,
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772]],

         [[0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          ...,
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772]],

         [[0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          ...,
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772],
          [0.2772, 0.2772, 0.2772,  ..., 0.2772, 0.2772, 0.2772]]]],
       device='cuda:0')
Extracting beta: tensor([35], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          ...,
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582]],

         [[0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          ...,
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582]],

         [[0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          ...,
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582],
          [0.2582, 0.2582, 0.2582,  ..., 0.2582, 0.2582, 0.2582]]]],
       device='cuda:0')
Extracting beta: tensor([36], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          ...,
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538]],

         [[0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          ...,
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538]],

         [[0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          ...,
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538],
          [0.2538, 0.2538, 0.2538,  ..., 0.2538, 0.2538, 0.2538]]]],
       device='cuda:0')
Extracting beta: tensor([33], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          ...,
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452]],

         [[0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          ...,
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452]],

         [[0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          ...,
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452],
          [0.2452, 0.2452, 0.2452,  ..., 0.2452, 0.2452, 0.2452]]]],
       device='cuda:0')
Extracting beta: tensor([34], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          ...,
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413]],

         [[0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          ...,
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413]],

         [[0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          ...,
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413],
          [0.2413, 0.2413, 0.2413,  ..., 0.2413, 0.2413, 0.2413]]]],
       device='cuda:0')
Extracting beta: tensor([31], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          ...,
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224]],

         [[0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          ...,
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224]],

         [[0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          ...,
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224],
          [0.2224, 0.2224, 0.2224,  ..., 0.2224, 0.2224, 0.2224]]]],
       device='cuda:0')
Extracting beta: tensor([32], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          ...,
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287]],

         [[0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          ...,
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287]],

         [[0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          ...,
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287],
          [0.2287, 0.2287, 0.2287,  ..., 0.2287, 0.2287, 0.2287]]]],
       device='cuda:0')
Extracting beta: tensor([29], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          ...,
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095]],

         [[0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          ...,
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095]],

         [[0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          ...,
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095],
          [0.2095, 0.2095, 0.2095,  ..., 0.2095, 0.2095, 0.2095]]]],
       device='cuda:0')
Extracting beta: tensor([30], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          ...,
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255]],

         [[0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          ...,
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255]],

         [[0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          ...,
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255],
          [0.2255, 0.2255, 0.2255,  ..., 0.2255, 0.2255, 0.2255]]]],
       device='cuda:0')
Extracting beta: tensor([27], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          ...,
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963]],

         [[0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          ...,
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963]],

         [[0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          ...,
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963],
          [0.1963, 0.1963, 0.1963,  ..., 0.1963, 0.1963, 0.1963]]]],
       device='cuda:0')
Extracting beta: tensor([28], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          ...,
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119]],

         [[0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          ...,
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119]],

         [[0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          ...,
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119],
          [0.2119, 0.2119, 0.2119,  ..., 0.2119, 0.2119, 0.2119]]]],
       device='cuda:0')
Extracting beta: tensor([25], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          ...,
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913]],

         [[0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          ...,
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913]],

         [[0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          ...,
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913],
          [0.1913, 0.1913, 0.1913,  ..., 0.1913, 0.1913, 0.1913]]]],
       device='cuda:0')
Extracting beta: tensor([26], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          ...,
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898]],

         [[0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          ...,
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898]],

         [[0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          ...,
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898],
          [0.1898, 0.1898, 0.1898,  ..., 0.1898, 0.1898, 0.1898]]]],
       device='cuda:0')
Extracting beta: tensor([23], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          ...,
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697]],

         [[0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          ...,
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697]],

         [[0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          ...,
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697],
          [0.1697, 0.1697, 0.1697,  ..., 0.1697, 0.1697, 0.1697]]]],
       device='cuda:0')
Extracting beta: tensor([24], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          ...,
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763]],

         [[0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          ...,
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763]],

         [[0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          ...,
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763],
          [0.1763, 0.1763, 0.1763,  ..., 0.1763, 0.1763, 0.1763]]]],
       device='cuda:0')
Extracting beta: tensor([21], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          ...,
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559]],

         [[0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          ...,
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559]],

         [[0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          ...,
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559],
          [0.1559, 0.1559, 0.1559,  ..., 0.1559, 0.1559, 0.1559]]]],
       device='cuda:0')
Extracting beta: tensor([22], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          ...,
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702]],

         [[0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          ...,
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702]],

         [[0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          ...,
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702],
          [0.1702, 0.1702, 0.1702,  ..., 0.1702, 0.1702, 0.1702]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          ...,
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419]],

         [[0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          ...,
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419]],

         [[0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          ...,
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419],
          [0.1419, 0.1419, 0.1419,  ..., 0.1419, 0.1419, 0.1419]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          ...,
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557]],

         [[0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          ...,
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557]],

         [[0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          ...,
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557],
          [0.1557, 0.1557, 0.1557,  ..., 0.1557, 0.1557, 0.1557]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          ...,
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337]],

         [[0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          ...,
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337]],

         [[0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          ...,
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337],
          [0.1337, 0.1337, 0.1337,  ..., 0.1337, 0.1337, 0.1337]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          ...,
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349]],

         [[0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          ...,
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349]],

         [[0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          ...,
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349],
          [0.1349, 0.1349, 0.1349,  ..., 0.1349, 0.1349, 0.1349]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          ...,
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187]],

         [[0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          ...,
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187]],

         [[0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          ...,
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187],
          [0.1187, 0.1187, 0.1187,  ..., 0.1187, 0.1187, 0.1187]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          ...,
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206]],

         [[0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          ...,
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206]],

         [[0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          ...,
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206],
          [0.1206, 0.1206, 0.1206,  ..., 0.1206, 0.1206, 0.1206]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          ...,
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988]],

         [[0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          ...,
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988]],

         [[0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          ...,
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988],
          [0.0988, 0.0988, 0.0988,  ..., 0.0988, 0.0988, 0.0988]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          ...,
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060]],

         [[0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          ...,
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060]],

         [[0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          ...,
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060],
          [0.1060, 0.1060, 0.1060,  ..., 0.1060, 0.1060, 0.1060]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          ...,
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839]],

         [[0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          ...,
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839]],

         [[0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          ...,
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839],
          [0.0839, 0.0839, 0.0839,  ..., 0.0839, 0.0839, 0.0839]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          ...,
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957]],

         [[0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          ...,
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957]],

         [[0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          ...,
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957],
          [0.0957, 0.0957, 0.0957,  ..., 0.0957, 0.0957, 0.0957]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          ...,
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688]],

         [[0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          ...,
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688]],

         [[0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          ...,
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688],
          [0.0688, 0.0688, 0.0688,  ..., 0.0688, 0.0688, 0.0688]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          ...,
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800]],

         [[0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          ...,
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800]],

         [[0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          ...,
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800],
          [0.0800, 0.0800, 0.0800,  ..., 0.0800, 0.0800, 0.0800]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          ...,
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562]],

         [[0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          ...,
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562]],

         [[0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          ...,
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562],
          [0.0562, 0.0562, 0.0562,  ..., 0.0562, 0.0562, 0.0562]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          ...,
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613]],

         [[0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          ...,
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613]],

         [[0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          ...,
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613],
          [0.0613, 0.0613, 0.0613,  ..., 0.0613, 0.0613, 0.0613]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          ...,
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381]],

         [[0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          ...,
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381]],

         [[0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          ...,
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381],
          [0.0381, 0.0381, 0.0381,  ..., 0.0381, 0.0381, 0.0381]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          ...,
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458]],

         [[0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          ...,
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458]],

         [[0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          ...,
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458],
          [0.0458, 0.0458, 0.0458,  ..., 0.0458, 0.0458, 0.0458]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]],

         [[0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          ...,
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223],
          [0.0223, 0.0223, 0.0223,  ..., 0.0223, 0.0223, 0.0223]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          ...,
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317]],

         [[0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          ...,
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317]],

         [[0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          ...,
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317],
          [0.0317, 0.0317, 0.0317,  ..., 0.0317, 0.0317, 0.0317]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          ...,
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062]],

         [[0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          ...,
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062]],

         [[0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          ...,
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
          [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          ...,
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150]],

         [[0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          ...,
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150]],

         [[0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          ...,
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150],
          [0.0150, 0.0150, 0.0150,  ..., 0.0150, 0.0150, 0.0150]]]],
       device='cuda:0')

LPIPS for 000000.png
resizing to 64x64
SSIM for (64, 64, 3) (64, 64, 3)
sampling complete
