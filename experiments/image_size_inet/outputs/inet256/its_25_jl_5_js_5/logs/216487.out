Start test_inet256_genhalf
device: cuda
cond_y: 933
loading model...
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Loading model from: /workspace/.miniconda3/lib/python3.11/site-packages/lpips/weights/v0.1/alex.pth
Setting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]
Loading model from: /workspace/.miniconda3/lib/python3.11/site-packages/lpips/weights/v0.1/vgg.pth
Betas step 1000
[0, 42, 83, 125, 166, 208, 250, 291, 333, 375, 416, 458, 500, 541, 583, 624, 666, 708, 749, 791, 832, 874, 916, 957, 999]
25
Timestep number: 1000
Timestep number: 25
loading state
loading classifier...
{'image_size': 256, 'classifier_use_fp16': False, 'classifier_width': 128, 'classifier_depth': 2, 'classifier_attention_resolutions': '32,16,8', 'classifier_use_scale_shift_norm': True, 'classifier_resblock_updown': True, 'classifier_pool': 'attention'}
./data/pretrained/256x256_classifier.pt
sampling...
eval_name: lama_inet256_genhalf_n100_test
loading dataloader...
tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')

tensor([933], device='cuda:0')
tensor([933], device='cuda:0')
classes: tensor([933], device='cuda:0') cheeseburger
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([16], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]],

         [[0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          ...,
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218],
          [0.4218, 0.4218, 0.4218,  ..., 0.4218, 0.4218, 0.4218]]]],
       device='cuda:0')
Extracting beta: tensor([17], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]],

         [[0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          ...,
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420],
          [0.4420, 0.4420, 0.4420,  ..., 0.4420, 0.4420, 0.4420]]]],
       device='cuda:0')
Extracting beta: tensor([18], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]],

         [[0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          ...,
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533],
          [0.4533, 0.4533, 0.4533,  ..., 0.4533, 0.4533, 0.4533]]]],
       device='cuda:0')
Extracting beta: tensor([19], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]],

         [[0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          ...,
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800],
          [0.4800, 0.4800, 0.4800,  ..., 0.4800, 0.4800, 0.4800]]]],
       device='cuda:0')
Extracting beta: tensor([20], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]],

         [[0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          ...,
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897],
          [0.4897, 0.4897, 0.4897,  ..., 0.4897, 0.4897, 0.4897]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([11], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]],

         [[0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          ...,
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106],
          [0.3106, 0.3106, 0.3106,  ..., 0.3106, 0.3106, 0.3106]]]],
       device='cuda:0')
Extracting beta: tensor([12], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]],

         [[0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          ...,
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346],
          [0.3346, 0.3346, 0.3346,  ..., 0.3346, 0.3346, 0.3346]]]],
       device='cuda:0')
Extracting beta: tensor([13], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]],

         [[0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          ...,
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507],
          [0.3507, 0.3507, 0.3507,  ..., 0.3507, 0.3507, 0.3507]]]],
       device='cuda:0')
Extracting beta: tensor([14], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]],

         [[0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          ...,
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797],
          [0.3797, 0.3797, 0.3797,  ..., 0.3797, 0.3797, 0.3797]]]],
       device='cuda:0')
Extracting beta: tensor([15], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]],

         [[0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          ...,
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937],
          [0.3937, 0.3937, 0.3937,  ..., 0.3937, 0.3937, 0.3937]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([6], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]],

         [[0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          ...,
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785],
          [0.1785, 0.1785, 0.1785,  ..., 0.1785, 0.1785, 0.1785]]]],
       device='cuda:0')
Extracting beta: tensor([7], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]],

         [[0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          ...,
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023],
          [0.2023, 0.2023, 0.2023,  ..., 0.2023, 0.2023, 0.2023]]]],
       device='cuda:0')
Extracting beta: tensor([8], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]],

         [[0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          ...,
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339],
          [0.2339, 0.2339, 0.2339,  ..., 0.2339, 0.2339, 0.2339]]]],
       device='cuda:0')
Extracting beta: tensor([9], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]],

         [[0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          ...,
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606],
          [0.2606, 0.2606, 0.2606,  ..., 0.2606, 0.2606, 0.2606]]]],
       device='cuda:0')
Extracting beta: tensor([10], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]],

         [[0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          ...,
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802],
          [0.2802, 0.2802, 0.2802,  ..., 0.2802, 0.2802, 0.2802]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')
Extracting beta: tensor([1], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]],

         [[0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          ...,
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220],
          [0.0220, 0.0220, 0.0220,  ..., 0.0220, 0.0220, 0.0220]]]],
       device='cuda:0')
Extracting beta: tensor([2], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]],

         [[0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          ...,
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541],
          [0.0541, 0.0541, 0.0541,  ..., 0.0541, 0.0541, 0.0541]]]],
       device='cuda:0')
Extracting beta: tensor([3], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]],

         [[0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          ...,
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876],
          [0.0876, 0.0876, 0.0876,  ..., 0.0876, 0.0876, 0.0876]]]],
       device='cuda:0')
Extracting beta: tensor([4], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]],

         [[0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          ...,
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162],
          [0.1162, 0.1162, 0.1162,  ..., 0.1162, 0.1162, 0.1162]]]],
       device='cuda:0')
Extracting beta: tensor([5], device='cuda:0') torch.Size([1, 3, 256, 256]) tensor([[[[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]],

         [[0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          ...,
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490],
          [0.1490, 0.1490, 0.1490,  ..., 0.1490, 0.1490, 0.1490]]]],
       device='cuda:0')

LPIPS for 000000.png
resizing to 64x64
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000001.png
resizing to 64x64
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000002.png
resizing to 64x64
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000003.png
resizing to 64x64
SSIM for (64, 64, 3) (64, 64, 3)
LPIPS for 000004.png
resizing to 64x64
SSIM for (64, 64, 3) (64, 64, 3)
sampling complete
